/* * *      Copyright 2013 Jive Software * *      Licensed under the Apache License, Version 2.0 (the "License"); *      you may not use this file except in compliance with the License. *      You may obtain a copy of the License at * *         http://www.apache.org/licenses/LICENSE-2.0 * *      Unless required by applicable law or agreed to in writing, software *      distributed under the License is distributed on an "AS IS" BASIS, *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *      See the License for the specific language governing permissions and *      limitations under the License. */// Note: ModuleContext and $ are provided by the module manager// The init function runs only if the module has been activatedthis.init = function () {   // Compile markup as named templates to be used by onGetPreviewData later   var html = ModuleContext.getResourceFile('JIRAPageDataTemplate.html');   $.templates({      jiraPageDataTemplate : html   });};// Display the defect ID of the site in the community tabthis.onGetModuleUI = function () {    var moduleUiInfo = { defaultTabId: 0, tabs: [{ title: extractDefectID() }] };    return moduleUiInfo;};// Generates preview data when submitting a new discussion instead of the default OpenGraphthis.onGetPreviewData = function (openGraphMetadata, callback) {   // Extracting page data by invoking a page helper function on pagescript.js   ModuleContext.runPageScript('getPreviewData', null, function (pageData) {      // Use the LinkedInPageDataTemplate.html template to generate html markup      var html = $.render.jiraPageDataTemplate(pageData);      // Pass the html back to the module manager      callback(html);   });};// Trim the page title to get to the section of the sitevar extractDefectID = function () {    var pageTitle = ModuleContext.pageInfo.title;    return pageTitle.substring(0, pageTitle.lastIndexOf(']')+1);};